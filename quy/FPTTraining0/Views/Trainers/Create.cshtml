@model FPTTraining0.ViewModels.TrainerMajorViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create a new Trainer</h2>

@Html.ValidationSummary(false, "", new { @class = "text-danger" })

@using (Html.BeginForm("Create", "Trainers", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(p => p.Trainer.Name)
        @Html.TextBoxFor(p => p.Trainer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Trainer.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Trainer.TrainerEmail)
        @Html.TextBoxFor(p => p.Trainer.TrainerEmail, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Trainer.TrainerEmail, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Trainer.PassEmail)
        @Html.TextBoxFor(p => p.Trainer.PassEmail, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Trainer.PassEmail, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Trainer.Major.Name)
        @Html.DropDownListFor(p => p.Trainer.MajorId,
         new SelectList(Model.Majors, "Id", "Name"),
         "Select Major Name",
         new { @class = "form-control" })
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
}
@Html.ActionLink("Back to Index", "Index")
